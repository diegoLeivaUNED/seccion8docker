name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: git semantic version
        uses: paulhatch/semantic-version@v4.0.3
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "major:"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "feat:"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-prerelease${increment}"
        id: version
        
      - name: Docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo "iniciando login"
          echo "new version $NEW_VERSION"
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          echo "finalizando login"

          
      - name: build docker image
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker build -t jdleiva21/myimage:$NEW_VERSION .
          docker build -t jdleiva21/myimage:latest .
          
      - name: push docker image
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker push jdleiva21/myimage:$NEW_VERSION
          docker push jdleiva21/myimage:latest
          
